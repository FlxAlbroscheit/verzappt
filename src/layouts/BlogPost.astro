---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import TagLink from "../components/TagLink.astro";

type Props = CollectionEntry<"aussagen">["data"];

type Party = {
  slug: string;
  title: string;
  color: string;
  contrastColor?: string;
}

const description = "";
const { title, pubDate, heroImage, party, tags } = Astro.props;

const parties: Party[] = [
  {
    slug: "linke",
    title: "Die Linke",
    color: "#D40000"
  },
  {
    slug: "spd",
    title: "SPD",
    color: "#EB001F"
  },
  {
    slug: "gruene",
    title: "Die Grünen",
    color: "#46962B"
  },
  {
    slug: "fdp",
    title: "FDP",
    color: "#FFD300"
  },
  {
    slug: "afd",
    title: "AfD",
    color: "#009EE0"
  },
  {
    slug: "cdu",
    title: "CDU",
    color: "#000000",
    contrastColor: "#FFFFFF"
  },
  {
    slug: "freiewaehler",
    title: "Freie Wähler",
    color: "#FFD700"
  },
  {
    slug: "humanisten",
    title: "Humanisten",
    color: "#FFD700"
  },
  {
    slug: "bsw",
    title: "BSW",
    color: "#FFD700"
  }
]

const randomizedParties = parties.sort(() => Math.random() - 0.5);

---

<html lang="en" class="dark">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class="w-full mx-auto my-4 dark:bg-neutral-800 dark:text-neutral-300 transition-colors duration-300">
    <Header />
    <main class="px-4 md:px-16 max-w-[50%] m-auto text-center">
      <article>
        <div class="flex justify-between mb-6 hidden">
          <FormattedDate date={pubDate} />
        </div>
        <div id="cover-image" class="absolute inset opacity-0 z-[-1] left-1/2 translate-x-[-50%] transition-all">
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <h1 class="text-6xl text-center m-auto hover:italic hover:underline">
          "{title}"
        </h1>
        <p class="font-bold my-8 md:my-12">Von welcher Partei stammt diese Aussage?</p>
        <ul 
          id="party-select"
          class="flex flex-wrap items-center justify-center gap-3"
          data-correct-party={party}  
        >
        {
          randomizedParties.map((party) => (
            <li>
              <button 
                data-party={party.slug}
                class="rounded-full border border-white py-4 px-4 text-2xl hover:bg-[var(--hover-bg)] hover:text-[var(--hover-text)] hover:scale-[1.10] transition-all"
                style={{ "--hover-bg": party.color, "--hover-text": party.contrastColor || "#000000" }}
              >
                {party.title}
              </button>
            </li>
          ))
        }
        </ul>
        <script>
        const coverImage = document.getElementById("cover-image");
        const partySelect = document.getElementById("party-select");
        const partyBtns = partySelect ? [...partySelect.querySelectorAll("li button")] : [];

        const onClickParty = (partyBtn: HTMLElement) => {
          const correctParty = partySelect.dataset.correctParty;
          const guessedParty = partyBtn.getAttribute("data-party");
          const isCorrect = correctParty === guessedParty;

          partySelect?.classList.add("pointer-events-none");
          coverImage?.classList.remove("opacity-0");
          coverImage?.classList.add("opacity-30");

          if (isCorrect) {
            partyBtn.classList.add("bg-correct");
            partyBtn.classList.add("scale-[1.10]");
          } else {
            partyBtn.classList.add("bg-incorrect");
            partyBtn.classList.add("scale-[1.10]");
            const correctPartyBtn = partyBtns.find((btn) => btn.getAttribute("data-party") === correctParty);
            correctPartyBtn?.classList.add("bg-correct");
            correctPartyBtn?.classList.add("scale-[1.10]");
          }
        }

        partyBtns.forEach((partyBtn) => {
          partyBtn.addEventListener("click", () => onClickParty(partyBtn as HTMLElement))
        })
        </script>
        <div class="hidden">
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="mt-10">
          <slot />
        </div>
        <div>
          {
            tags && (
                <ul class="flex gap-2">
                  {tags.map((tag) => (
                    <li>
                      <TagLink tag={tag} />
                    </li>
                  ))}
                </ul>
            )
          }
        </div>
      </article>
    </main>
    <Footer />
  </body>

  <style is:inline>
    /* Base Styles */
img {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 20px 0;
}

/* Headings */
h1, h2, h3, h4, h5, h6 {
    color: var(--grey-900);
    margin-top: 24px;
    margin-bottom: 16px;
    font-weight: bold;
}

h1 { font-size: 32px; }
h2 { font-size: 28px; }
h3 { font-size: 24px; }
h4 { font-size: 20px; }
h5 { font-size: 18px; }
h6 { font-size: 16px; }

/* Paragraphs */
p {
    margin-top: 0;
    margin-bottom: 16px;
}

/* Blockquotes */
blockquote {
    border-left: 4px solid #ccc;
    padding: 10px 20px;
    margin: 20px 0;
    color: #666;
    background-color: #f9f9f9;
    @apply dark:bg-neutral-700 text-white border-l-4 border-neutral-500; 
}

/* Code Blocks and Inline Code */

pre {
    padding: 10px;
    overflow-x: auto;
    margin-top: 0;
    margin-bottom: 16px;
}

code {
    padding: 2px 4px;
    font-family: 'Courier New', monospace;
    font-size: 90%;
}

/* Tables */
table {
    width: 100%;
    margin-bottom: 20px;
    border-collapse: collapse;
}

th, td {
    padding: 8px;
    border: 1px solid #ddd;
}

th {
    background-color: #f4f4f4;
    @apply dark:bg-neutral-700;
}

/* Lists */
.footnotes ul, ol {
    margin-top: 0;
    margin-bottom: 16px;
    padding-left: 20px;
    list-style: outside;
}

/* Special HTML Tags */
abbr {
    border-bottom: 1px dotted #666;
    cursor: help;
}

kbd {
    padding: 2px 4px;
    font-size: 90%;
    color: #fff;
    background-color: #333;
    border-radius: 3px;
}

mark {
    background-color: yellow;
    color: black;
}

sup, sub {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sup { top: -0.5em; }
sub { bottom: -0.25em; }




</style>


  </html>
